Roll Your Own Video CMS
Session Type: Workshop, hacking
Session Category: Technical
Session Leader: Steve Heffernan and Jon Dahl
Day: Saturday
Room: W303
Time: 12:00pm – 1:30pm

Description
Ever wanted to get YouTube-like functionality on your site? There’s a huge range of options, from self-hosted to SaaS, that cover the top-to-bottom of managing video. In this session, we’ll take a look at the following:
   * An overview of the video stack (app, hosting, encoding, uploader, video player)
   * An overview of open source and paid solutions for each step
   * Questions of participants around challenges of building a video CMS.
   * Open questions and discussion.
Outcome
Greater understanding of the range of available options, opportunities and challenges in rolling your own video CMS


stack:  upload, encode, host, CDN, player, app

UPLOAD
================

Front-end (JS, Flash, HTML5, Java, Plugin)
Back-end (handling upload, report progress)

Challenges:
-- Large file size: 2GB limit in Flash, 4GB in HTML5 (?)
-- Webcam ingest
-- Progress: Flash (on front end), JS (via backend)
-- Bandwidth: slow uploads
-- Closing window on long upload

Approaches:
-- scp from client to server
-- Drupal: MediaMover
-- Send to free third party (archive.org, YouTube)
-- Send to commercial third party (TubeMogul)
-- Upload front-end: swfupload, plupload
-- Send webcam frames individually
-- Erlyvideo
-- Native iOS upload
-- Backend: Apache, Ngnix, NodeJS
-- UDP


TRANSCODING
================

Web Formats:
-- MP4 + H.264 + AAC/MP3 (Commercial license, but free for internet distribution)
-- Ogg + Theora + Vorbis (Open, royalty-free)
-- WebM (MKV) + VP8 + Vorbis (Open, royalty-free)
-- FLV + VP6 (Commercial, royalty-free)
-- Real (???)

Compatibility:
-- UGC challenges
-- Professional challenges

Challenges:
-- Quality and time, bitrate
-- Licensing: patent licensing, software licensing
-- Device compatibility

Approaches:
-- open: ffmpeg, mencoder, ffmpeg2theora, avidemux, Handbrake, x264, FireOgg, Miro Video Converter
-- closed

Metadata preservation
-- Some data passed manually alongside of a video (title, author)
-- Other metadata is automatically added to a file by a camera (lat/long, creation date) - like EXIF
-- Manual metadata can be injected directly into file, but this is often disregarded on transcoding 
-- (mediainfo is a tool that will display this metadata)
-- e.g. id3 tags for mp3

Unpredictable types/files

Preserving original version

Transcript
-- Human-generated > software-generated for accuracy 
-- Speech-to-text for syncing
-- Nuance, Ramp, Nexidia, Matterhorn - speech-to-text software
-- Youtube: timed transcript, non-timed, speech-to-text
-- Sync transcript to player
-- Benefits: SEO (?), accessibility, usability

Captioning:
-- WGBH captioning as a service for broadcast
-- Closed captions (separate from video) vs. open captions (burned into video)
-- Multiple languages
-- Metavid - OCR and speech-to-text, universalsubtitles.org, sublr
-- Web versions of broadcast video in US must include subtitles, starting next year


