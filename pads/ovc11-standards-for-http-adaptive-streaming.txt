== Standards for HTTP Adaptive Streaming

Frank Galligan (Google)
Aaron Colwell (Google)
Mark Watson (Netflix)


=== Mark: Introduction to DASH

* MPEG is finalizing the DASH specification
* DASH is a manifest format for describing all available streams for a media resource
* DASH also defines file formats that are suitable for making use of this with MPEG-4 File Format; transport streams work "magically"
* there is also a common encryption scheme for MPEG-4 file format in DASH
* defined profiles: 2 for mp4, 2 for transport streams
* for transport streams there is a on-demand and a live profile:
  * on-demand profiles require alignment of files
  * live require chunking of the files
* example manifest
  * AdaptationSet: groups per resource or per track
  * Representation: different representations for same resource
  * muxed cases are difficult in particular to align the chunks
* features:
  * multiple tracks / accessibility
  * trick modes (e.g. deal with fast forward by dropping to lower framerate)
  * 3D, multi-view, scalable video
  * protected content
* implementation: Netflix is using this format

Comments:
* the DASH file format is very complex and could be simplified and not require such a complicated parser
* to implement it with Matroska, you will need to extract the Matroska cluster index
* nicely arranged media in chunks and index them (when authoring) really helps to simplify the adaptive streaming
* example bitstreams and implementations are in the process of being developed in MPEG


=== Aaron: Media Source API

* implemented in Chrome for adaptive streaming, but may be applicable to other use cases
* an extension to HTMLMediaElement that allos to pipe data into audio and video, similar to appendBytes in Flash
* stream switching, buffering, delivery, manifest strategies should not be done by the browser - the browser just provides an API to dynamically create content
* supports adaptive streaming, mashups, ad insertion, streaming services, DVR, video editors (constraint editing)
* proposed IDL:
  * special URL that the browser advertises: webkitMediaSourceURL (media data comes from JS)
  * webkitSourceAppend() call with error handling
  * webkitSourceEdnOfStream with states to manage stage handling

