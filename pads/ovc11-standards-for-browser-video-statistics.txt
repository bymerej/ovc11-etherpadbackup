== Standards for Browser Video Playback Metrics

Zachary Ozer (JWPlayer)
Pablo Schklowsky (JWPlayer)

* start off with demo of Flash with adaptive bitrate switching and metrics
  * shows bandwidth
  * shows size of video (width x height)
  * shows dropped frames
  * shows switching between different levels
* there is no way to do this in HTML5 right now

Use cases:
* gathering engagement data for analytics
* adaptive bitrate switching
* playback quality monitoring & dropped frames for measuring the user experience
* network congestion monitoring & devices in specific areas / system performance monitoring -> can the server adapt the media rather than the client
* page visibility / tab visibility management
* electricity consumption / CPU utilization / GPU utilization
* 


What metrics/statistics have the frameworks implemented:
* Zach shows a table with the existing proprties as fimplemented by Firefox and Chrome, as well as the existing proposal and what other frameworks implement (Silverlight, Flash etc)
* current proposal:
  * bytesReceived
  * bytesDecoded: audioBytesDecoded, videoBytesDecoded
  * decodedFrames
  * droppedFrames
  * presentedFrames
  * playbackJitter
* are these good metrics? what else do we need?

Discussion:
* frames per second is a bad metric - what does it give you? maybe something like percentage of frames not displayed would be better? maybe measuring the accumulated time that a clock has been stopped/delayed?
* there is an optimal playback quality; a counter that accumulates the lateness of frames can help, but then you cannot catch up with changes; you either need to define a window or be able to reset the counter to do useful measurements
* you want to be able to separate out whether a frame latency comes from a network or a CPU issue
* there are two main use cases: measure whether a user's experience is good after-the-fact and collect data to adapt the delivery to improve the user's experience in real-time
* you cannot know ahead of time, even when knowing what device you are playing on and what bandwidth is available, what quality the video will playback in because there are other things happening on the machine
* for privacy reasons we cannot expose the details of the hardware
* what happens when the data comes from the cache rather than from the network?
* all metrics in the browser are right now based on time, not on bytes - you need bytes when you want to do rate switching; you need to know if you are not playing back video in realtime (i.e. sec of video played per second)

What can be derived from the current proposal?
* all min, max, average
* downloadBytesPerSecond
* playbackRate
  * audioPlaybackBitrate
  * videoPlaybackBitrate

What is missing from the current proposal?
* it doesn't tell you whether data comes from the cache or the network
* we need a bytes to time mapping if any of the byte information will be useful


