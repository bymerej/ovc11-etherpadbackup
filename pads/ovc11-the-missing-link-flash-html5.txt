The Missing Link: Flash to HTML5

Zohar Babin, Kaltura
Silvia Pfeiffer, Google

== Where do you think we should go with HTML5?
* ease of use; e.g. drag and drop API is 3 lines in Flash, but really complicated in HTML5
* lack of authoring tools
* fragmentation of features
* is innovation getting in the way of colaboration?

WRITE BUG REPORTS if browser implementations are giving you headaches

Bug Trackers:
* WHATWG/W3C spec
* Individual Browsers

== Use Cases ==

* AppendBytes, editable byte arrays, the netstream concept -- Dependent on OS media framework
** Low Level Video APIs
** DVR (high speed seeking within buffers) on livestreams
** netstream file construction
*** Adaptive Streaming
*** Video Editing
*** Multiplexing
*** Syncronized Media: @mediagroup has been developed as a solution
*** Software Transcoding

sourceAppend API: http://html5-mediasource-api.googlecode.com/svn/trunk/draft-spec/mediasource-draft-spec.html

canvas.getMediaStream() is another way forward

the biggest issue is: how to use canvas with capturing video frames without losing any data, i.e. in a synchronised manner -> we need timestamps in canvas media frames


* DRM
** What hooks do we need
** data over RTP
** encryption key should be published
** secure key exchange
** proxy opaque DRM messages over HTTP
** is applicable to many other areas in addition to media (ecrypted messaging, etc.)
** JS needs to be delivered over HTTPS or as signed JS
** what is the patent situation?


Other sessions cover these topics:
* adaptive streaming: appendBytes
* analytics/QOS
* device and camera


Topics for Monday breakouts:
* appendBytes
* DVR on live streams, seeking
* DRM
* video editing
* fullscreen
* playlist and gapless playback, high level html tags


Additional Topics:
* file metadata
* hw acceleration for video playback and compositing
* social viewing

